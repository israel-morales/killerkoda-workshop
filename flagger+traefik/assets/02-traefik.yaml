# helm template traefik --set ports.web.nodePort=30080  --set ingressRoute.dashboard.entryPoints=={"traefik"}  --set experimental.kubernetesGateway.enabled=true --set providers.kubernetesCRD.allowCrossNamespace=true traefik/traefik --namespace traefik| kubectl apply -f - -n traefik -oyaml --dry-run | k neat > 02-traefik.yaml
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-11.1.1
    name: traefik
    namespace: traefik
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-10.19.300
    name: traefik
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - ingresses
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - traefik.containo.us
    resources:
    - ingressroutes
    - ingressroutetcps
    - ingressrouteudps
    - middlewares
    - middlewaretcps
    - tlsoptions
    - tlsstores
    - traefikservices
    - serverstransports
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-10.19.300
    name: traefik
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: traefik
  subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: kube-system
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-11.1.1
    name: traefik
    namespace: traefik
  spec:
    minReadySeconds: 0
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik
        app.kubernetes.io/name: traefik
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/instance: traefik
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-11.1.1
      spec:
        containers:
        - args:
          - --global.checknewversion
          - --global.sendanonymoususage
          - --entrypoints.metrics.address=:9100/tcp
          - --entrypoints.traefik.address=:9000/tcp
          - --entrypoints.web.address=:8000/tcp
          - --entrypoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowCrossNamespace=true
          - --providers.kubernetesingress
          - --providers.kubernetesgateway
          - --experimental.kubernetesgateway
          image: traefik:2.9.1
          imagePullPolicy: IfNotPresent
          lifecycle: null
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 9000
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: null
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        hostNetwork: false
        securityContext:
          fsGroup: 65532
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        volumes:
        - name: data
        - name: tmp
- apiVersion: gateway.networking.k8s.io/v1alpha2
  kind: Gateway
  metadata:
    name: traefik-gateway
    namespace: traefik
  spec:
    gatewayClassName: traefik
    listeners:
    - name: web
      port: 8000
      protocol: HTTP
- apiVersion: gateway.networking.k8s.io/v1alpha2
  kind: GatewayClass
  metadata:
    name: traefik
  spec:
    controllerName: traefik.io/gateway-controller
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-11.1.1
    name: traefik
    namespace: traefik
  spec:
    ports:
    - name: web
      nodePort: 30080
      port: 80
      targetPort: web
    - name: websecure
      port: 443
      targetPort: websecure
    selector:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/name: traefik
    type: LoadBalancer
- apiVersion: traefik.containo.us/v1alpha1
  kind: IngressRoute
  metadata:
    annotations:
      helm.sh/hook: post-install,post-upgrade
    labels:
      app.kubernetes.io/instance: traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-11.1.1
    name: traefik-dashboard
    namespace: traefik
  spec:
    entryPoints:
    - traefik
    routes:
    - kind: Rule
      match: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
      services:
      - kind: TraefikService
        name: api@internal
kind: List
metadata: {}
