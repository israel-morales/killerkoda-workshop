
apiVersion: v1
kind: Namespace
metadata:
  name: rollouts-demo
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: rollouts-demo
  namespace: rollouts-demo
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/`)
      kind: Rule
      services:
        - name: rollouts-demo
          kind: TraefikService
          port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: TraefikService
metadata:
  name: rollouts-demo
  namespace: rollouts-demo
spec:
  weighted:
    services:
      - name: stable-rollout
        port: 80
      - name: canary-rollout
        port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: stable-rollout
  namespace: rollouts-demo
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: rollouts-demo
    # rollouts-pod-template-hash: 687d761111  # argo updates this label dynamically
---
apiVersion: v1
kind: Service
metadata:
  name: canary-rollout
  namespace: rollouts-demo
spec:
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: rollouts-demo
    # rollouts-pod-template-hash: 687d762222  # argo updates this label dynamically
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: rollout-canary
  name: rollouts-demo
  namespace: rollouts-demo
spec:
  replicas: 0  # actual replicas handled by canary
  selector:
    matchLabels:
      app: rollouts-demo
  template:
    metadata:
      labels:
        app: rollouts-demo
    spec:
      containers:
        - name: rolloutd
          image: argoproj/rollouts-demo:blue
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rollouts-demo
spec:
  minAvailable: 1
  # maxUnavailable: 1  # min/max both can't be set
  selector:
    matchLabels:
      app: rollouts-demo
